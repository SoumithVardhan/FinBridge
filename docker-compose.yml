services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: finbridge_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - finbridge_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: finbridge_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - finbridge_network

  # Backend API
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: finbridge_backend
    restart: unless-stopped
    ports:
      - "5001:5000"  # Changed to avoid port conflict
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - PORT=5000
    volumes:
      - ./server:/app
      - /app/node_modules
      - ./server/uploads:/app/uploads
      - ./server/logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - finbridge_network

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile.dev
    container_name: finbridge_frontend
    restart: unless-stopped
    ports:
      - "3000:5173"  # Map to Vite's default port
    environment:
      - VITE_API_URL=http://localhost:5001/api
      - REACT_APP_API_URL=http://localhost:5001/api
      - NODE_ENV=${NODE_ENV}
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - finbridge_network

  # Adminer (Database Management Tool)
  adminer:
    image: adminer:latest
    container_name: finbridge_adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - finbridge_network

  # MailHog for local email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: finbridge_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - finbridge_network

networks:
  finbridge_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
